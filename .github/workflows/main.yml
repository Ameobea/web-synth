name: Cypress Tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      # Set up build environment + toolchains with Rust nightly with Wasm support and NodeJS
      - name: Install minimal Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2019-11-25
      - name: Use Rust nightly
        run: rustup default nightly-2019-11-25
      - name: Install Rust Wasm support
        run: rustup target add wasm32-unknown-unknown
      - uses: actions/setup-node@v1
        with:
          node-version: '13.1'

      # Caching
      # \/ Disabled due to (what sems to be) a bug in the `actions/cache` action (issue filed)
      # - name: Cache cargo binaries
      #   id: cache-cargo-binaries
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.cargo/bin
      #     key: ${{ runner.os }}_nightly-2019-11-25_cargo-registry_just-0.5.1_wasm-bindgen-cli-0.2.54
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('engine/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('engine/Cargo.lock') }}
      - name: Cache Rust lib build artifacts
        uses: actions/cache@v1
        with:
          path: ./engine/target
          key: ${{ runner.os }}_nightly-2019-11-25_${{ hashFiles('engine/Cargo.lock') }}
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ hashFiles('yarn.lock') }}

      # Install Cargo binaries used during the build process
      # - name: Install `just`
      #   if: steps.cache-cargo-binaries.outputs.cache-hit != 'true'
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: install
      #     args: just --version 0.5.1
      # - name: Install `wasm-bindgen-cli`
      #   if: steps.cache-cargo-binaries.outputs.cache-hit != 'true'
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: install
      #     args: wasm-bindgen-cli --version 0.2.54

      # Temporary until the bug in the cache action is fixed
      - name: Create custom binaries directory
        run: mkdir ~/bin
      - name: Install `just`
        run: curl https://web-synth-ci-binaries.ameo.design/just -o ~/bin/just && chmod +x ~/bin/just
      - name: Install `wasm-bindgen-cli`
        run: curl https://web-synth-ci-binaries.ameo.design/wasm-bindgen -o ~/bin/wasm-bindgen && chmod +x ~/bin/wasm-bindgen
      - name: Add custom binaries directory to the PATH
        run: echo "::add-path::$HOME/bin"

      # Build all Rust modules into Wasm, run `wasm-bindgen`, compile JavaScript, and link everything together
      - name: Install node modules
        run: yarn
      - name: Build all wasm + javascript
        run: just build-all

      - name: Upload built site as artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  cypress-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1

      - name: Download built site artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist

      # Run Cypress tests
      - name: Cypress Run
        uses: cypress-io/github-action@v1.16.1
        with:
          browser: chrome
          start: yarn cypress:serve
          wait-on: 'http://localhost:9000'
