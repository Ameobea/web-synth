<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv='content-language' content='en-us'>
    <meta name="description" content="Web-based audio synthesis, music production, and sound experimentation platform. Built using modern web tech (Rust, WebAssembly, Web Audio, and more)">

    <!-- Opengraph -->
    <meta property="og:title" content="Web Synth">
    <meta property="og:site_name" content="{{ htmlWebpackPlugin.options.title }}">
    <meta property="og:description" content="Web-based audio synthesis, music production, and sound experimentation platform. Built using modern web tech (Rust, WebAssembly, Web Audio, and more)">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://synth.ameo.dev/web-synth-splash.jpg">
    <meta property="og:image:alt" content="Combined screenshots of the Web Synth application showing the graph editor for the audio patch network and a part of the synth designer UI with envelope generators, param controls, and the FM synth modulation matrix">
    <meta property="og:image:width" content="1400">
    <meta property="og:image:height" content="735">
    <meta name="twitter:site" content="ameobea10" />
    <meta name="twitter:creator" content="ameobea10" />
    <meta
      name="twitter:title"
      content="Web Synth"
    />
    <meta
      name="twitter:card"
      content="summary_large_image"
    />
    <meta
      name="twitter:image"
      content="https://synth.ameo.dev/web-synth-splash.jpg"
    />
    <meta
      name="twitter:image:alt"
      content="Combined screenshots of the Web Synth application showing the graph editor for the audio patch network and a part of the synth designer UI with envelope generators, param controls, and the FM modulatin matrix"
    />

    <title>{{ htmlWebpackPlugin.options.title }}</title>
    <script type="text/javascript">
      window.RealAudioContext = window.AudioContext;
      // There's an anoying issue where the `AudioContext`s of the various different libraries I'm using differ from each
      // other, causing errors when connecting betwen different components.
      //
      // Here, we patch the global `AudioContext` instance so that constructing new instances of it just returns the same
      // pre-constructed instance.
      if (!window.audioContext && window.webkitAudioContext) {
        window.AudioContext = window.webkitAudioContext;
      }
      const OldAudioContext = globalThis.AudioContext;

      let latencyHint = 'interactive';
      if (localStorage.getItem('latencyHint')) {
        latencyHint = +localStorage.getItem('latencyHint');
        if (Number.isNaN(latencyHint) || latencyHint <= 0) {
          latencyHint = 'interactive';
        }
      } else if (navigator.platform.includes("Linux")) {
        // Get the host operating system's base audio context and use that for latency hint computation
        const _ctx = new AudioContext();
        const hostSampleRate = _ctx.sampleRate;
        _ctx.close();
        latencyHint = 800 / hostSampleRate;
      }
      window.latencyHint = latencyHint;

      const globalContext = new AudioContext({
        sampleRate: 44100,
        // This is important for Linux because pulseaudio is weird and drops frames if this isn't set precisely right
        //
        // This value came up in google chrome bug database conversation and seems to fix it
        latencyHint: latencyHint,
      });
      globalContext.globalVolume = new GainNode(globalContext);
      globalContext.globalVolume.gain.value = 1;
      globalContext.globalVolume.connect(globalContext.destination);

      let globalVolume = localStorage.getItem('globalVolume');
      if (globalVolume === null || globalVolume === undefined) {
        globalVolume = 20;
      }

      globalContext.globalVolume.gain.value = +globalVolume / 100;

      globalThis.AudioContext = function SingletonAudioContext() {
        return globalContext;
      };
    </script>
    <link rel="preconnect" href="https://web-synth.b-cdn.net" crossorigin>
    <style>
      {{{ fontCSS }}}
    </style>
    <script src="/wavyjones.js" type="text/javascript"></script>
    <style>
      {{{ indexCSS }}}
    </style>
    <link rel="stylesheet" href="/hack-subset.css" media="print" onload="this.media='all'" />

    <script async defer data-domain="notes.ameo.design" src="https://pause.ameo.dev/js/pause.js"></script>
  </head>

  <body>
    <div id="view-context-manager"></div>
    <div id="view-context-switcher"></div>
    <main id="content"></main>
    <div id="root"></div>
  </body>
</html>
